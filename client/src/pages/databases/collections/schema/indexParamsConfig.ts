import { DataTypeEnum, INDEX_TYPES_ENUM } from '@/consts';

export interface IndexParamConfig {
  label: string;
  key: string;
  type: 'number' | 'text' | 'bool';
  required?: boolean;
  min?: number;
  max?: number;
  defaultValue?: string | number | boolean;
  description?: string;
  helperText?: string;
}

export interface IndexTypeConfig {
  required: string[];
  optional: string[];
  params: Record<string, IndexParamConfig>;
}

export const INDEX_PARAMS_CONFIG: Record<
  string,
  Record<string, IndexTypeConfig>
> = {
  [DataTypeEnum.FloatVector]: {
    [INDEX_TYPES_ENUM.IVF_FLAT]: {
      required: ['nlist'],
      optional: ['nbits'],
      params: {
        nlist: {
          label: 'nlist',
          key: 'nlist',
          type: 'number',
          required: true,
          min: 1,
          max: 65536,
          description: 'params.nlist.description',
          helperText: 'params.nlist.helperText',
        },
        nbits: {
          label: 'nbits',
          key: 'nbits',
          type: 'number',
          min: 1,
          max: 16,
          defaultValue: '8',
          description: 'params.nbits.description',
          helperText: 'params.nbits.helperText',
        },
      },
    },
    [INDEX_TYPES_ENUM.HNSW]: {
      required: ['M', 'efConstruction'],
      optional: [''],
      params: {
        M: {
          label: 'M',
          key: 'M',
          type: 'number',
          required: true,
          min: 2,
          max: 2048,
          description: 'params.M.description',
          helperText: 'params.M.helperText',
        },
        efConstruction: {
          label: 'efConstruction',
          key: 'efConstruction',
          type: 'number',
          required: true,
          min: 1,
          max: 2147483647,
          description: 'params.efConstruction.description',
          helperText: 'params.efConstruction.helperText',
        },
      },
    },
    [INDEX_TYPES_ENUM.IVF_SQ8]: {
      required: ['nlist'],
      optional: [''],
      params: {
        nlist: {
          label: 'nlist',
          key: 'nlist',
          type: 'number',
          required: true,
          min: 1,
          max: 65536,
          description: 'params.nlist.description',
          helperText: 'params.nlist.helperText',
        },
      },
    },
    [INDEX_TYPES_ENUM.IVF_PQ]: {
      required: ['nlist', 'm'],
      optional: ['nbits'],
      params: {
        nlist: {
          label: 'nlist',
          key: 'nlist',
          type: 'number',
          required: true,
          min: 1,
          max: 65536,
          description: 'params.nlist.description',
          helperText: 'params.nlist.helperText',
        },
        m: {
          label: 'm',
          key: 'm',
          type: 'number',
          required: true,
          min: 1,
          max: 65536,
          description: 'params.m.description',
          helperText: 'params.m.helperText',
        },
        nbits: {
          label: 'nbits',
          key: 'nbits',
          type: 'number',
          min: 1,
          max: 64,
          defaultValue: '8',
          description: 'params.nbits.description',
          helperText: 'params.nbits.helperText',
        },
      },
    },
    SCANN: {
      required: ['nlist'],
      optional: ['with_raw_data'],
      params: {
        nlist: {
          label: 'nlist',
          key: 'nlist',
          type: 'number',
          required: true,
          min: 1,
          max: 65536,
          description: 'params.nlist.description',
          helperText: 'params.nlist.helperText',
        },
        with_raw_data: {
          label: 'with_raw_data',
          key: 'with_raw_data',
          type: 'bool',
          defaultValue: 'true',
          description: 'params.with_raw_data.description',
        },
      },
    },
    [INDEX_TYPES_ENUM.HNSW_SQ]: {
      required: ['M', 'efConstruction', 'sq_type'],
      optional: ['refine', 'refine_type'],
      params: {
        M: {
          label: 'M',
          key: 'M',
          type: 'number',
          required: true,
          min: 2,
          max: 2048,
          description: 'params.M.description',
          helperText: 'params.M.helperText',
        },
        efConstruction: {
          label: 'efConstruction',
          key: 'efConstruction',
          type: 'number',
          required: true,
          min: 1,
          max: 2147483647,
          description: 'params.efConstruction.description',
          helperText: 'params.efConstruction.helperText',
        },
        sq_type: {
          label: 'sq_type',
          key: 'sq_type',
          type: 'text',
          required: true,
          defaultValue: 'SQ8',
          description: 'params.sq_type.description',
          helperText: 'params.sq_type.helperText',
        },
        refine: {
          label: 'refine',
          key: 'refine',
          type: 'bool',
          defaultValue: 'false',
          description: 'params.refine.description',
          helperText: 'params.refine.helperText',
        },
        refine_type: {
          label: 'refine_type',
          key: 'refine_type',
          type: 'text',
          description: 'params.refine_type.description',
          helperText: 'params.refine_type.helperText',
        },
      },
    },
    [INDEX_TYPES_ENUM.HNSW_PQ]: {
      required: ['M', 'efConstruction', 'm', 'nbits'],
      optional: ['refine', 'refine_type'],
      params: {
        M: {
          label: 'M',
          key: 'M',
          type: 'number',
          required: true,
          min: 2,
          max: 2048,
          description: 'params.M.description',
          helperText: 'params.M.helperText',
        },
        efConstruction: {
          label: 'efConstruction',
          key: 'efConstruction',
          type: 'number',
          required: true,
          min: 1,
          max: 2147483647,
          description: 'params.efConstruction.description',
          helperText: 'params.efConstruction.helperText',
        },
        m: {
          label: 'm',
          key: 'm',
          type: 'number',
          required: true,
          min: 1,
          max: 65536,
          defaultValue: '32',
          description: 'params.m.description',
          helperText: 'params.m.helperText',
        },
        nbits: {
          label: 'nbits',
          key: 'nbits',
          type: 'number',
          required: true,
          min: 1,
          max: 24,
          defaultValue: '8',
          description: 'params.nbits.description',
          helperText: 'params.nbits.helperText',
        },
        refine: {
          label: 'refine',
          key: 'refine',
          type: 'bool',
          defaultValue: 'false',
          description: 'params.refine.description',
          helperText: 'params.refine.helperText',
        },
        refine_type: {
          label: 'refine_type',
          key: 'refine_type',
          type: 'text',
          description: 'params.refine_type.description',
          helperText: 'params.refine_type.helperText',
        },
      },
    },
    [INDEX_TYPES_ENUM.HNSW_PRQ]: {
      required: ['M', 'efConstruction', 'm', 'nbits', 'nrq'],
      optional: ['refine', 'refine_type'],
      params: {
        M: {
          label: 'M',
          key: 'M',
          type: 'number',
          required: true,
          min: 2,
          max: 2048,
          description: 'params.M.description',
          helperText: 'params.M.helperText',
        },
        efConstruction: {
          label: 'efConstruction',
          key: 'efConstruction',
          type: 'number',
          required: true,
          min: 1,
          max: 2147483647,
          description: 'params.efConstruction.description',
          helperText: 'params.efConstruction.helperText',
        },
        m: {
          label: 'm',
          key: 'm',
          type: 'number',
          required: true,
          min: 1,
          max: 65536,
          defaultValue: '32',
          description: 'params.m.description',
          helperText: 'params.m.helperText',
        },
        nbits: {
          label: 'nbits',
          key: 'nbits',
          type: 'number',
          required: true,
          min: 1,
          max: 24,
          defaultValue: '8',
          description: 'params.nbits.description',
          helperText: 'params.nbits.helperText',
        },
        nrq: {
          label: 'nrq',
          key: 'nrq',
          type: 'number',
          required: true,
          min: 1,
          max: 16,
          defaultValue: '2',
          description: 'params.nrq.description',
          helperText: 'params.nrq.helperText',
        },
        refine: {
          label: 'refine',
          key: 'refine',
          type: 'bool',
          defaultValue: 'false',
          description: 'params.refine.description',
          helperText: 'params.refine.helperText',
        },
        refine_type: {
          label: 'refine_type',
          key: 'refine_type',
          type: 'text',
          description: 'params.refine_type.description',
          helperText: 'params.refine_type.helperText',
        },
      },
    },
    [INDEX_TYPES_ENUM.GPU_CAGRA]: {
      required: ['intermediate_graph_degree', 'graph_degree', 'build_algo'],
      optional: ['cache_dataset_on_device', 'adapt_for_cpu'],
      params: {
        intermediate_graph_degree: {
          label: 'intermediate_graph_degree',
          key: 'intermediate_graph_degree',
          type: 'number',
          required: true,
          min: 1,
          max: 1024,
          defaultValue: '128',
          description: 'params.intermediate_graph_degree.description',
          helperText: 'params.intermediate_graph_degree.helperText',
        },
        graph_degree: {
          label: 'graph_degree',
          key: 'graph_degree',
          type: 'number',
          required: true,
          min: 1,
          max: 1024,
          defaultValue: '64',
          description: 'params.graph_degree.description',
          helperText: 'params.graph_degree.helperText',
        },
        build_algo: {
          label: 'build_algo',
          key: 'build_algo',
          type: 'text',
          required: true,
          defaultValue: 'IVF_PQ',
          description: 'params.build_algo.description',
          helperText: 'params.build_algo.helperText',
        },
        cache_dataset_on_device: {
          label: 'cache_dataset_on_device',
          key: 'cache_dataset_on_device',
          type: 'bool',
          defaultValue: 'false',
          description: 'params.cache_dataset_on_device.description',
          helperText: 'params.cache_dataset_on_device.helperText',
        },
        adapt_for_cpu: {
          label: 'adapt_for_cpu',
          key: 'adapt_for_cpu',
          type: 'bool',
          defaultValue: 'false',
          description: 'params.adapt_for_cpu.description',
          helperText: 'params.adapt_for_cpu.helperText',
        },
      },
    },
    [INDEX_TYPES_ENUM.GPU_IVF_FLAT]: {
      required: ['nlist'],
      optional: ['cache_dataset_on_device'],
      params: {
        nlist: {
          label: 'nlist',
          key: 'nlist',
          type: 'number',
          required: true,
          min: 1,
          max: 65536,
          defaultValue: '128',
          description: 'params.nlist.description',
          helperText: 'params.nlist.helperText',
        },
        cache_dataset_on_device: {
          label: 'cache_dataset_on_device',
          key: 'cache_dataset_on_device',
          type: 'bool',
          defaultValue: 'false',
          description: 'params.cache_dataset_on_device.description',
          helperText: 'params.cache_dataset_on_device.helperText',
        },
      },
    },
    [INDEX_TYPES_ENUM.GPU_IVF_PQ]: {
      required: ['nlist', 'm'],
      optional: ['nbits', 'cache_dataset_on_device'],
      params: {
        nlist: {
          label: 'nlist',
          key: 'nlist',
          type: 'number',
          required: true,
          min: 1,
          max: 65536,
          defaultValue: '128',
          description: 'params.nlist.description',
          helperText: 'params.nlist.helperText',
        },
        m: {
          label: 'm',
          key: 'm',
          type: 'number',
          required: true,
          min: 1,
          max: 65536,
          description: 'params.m.description',
          helperText: 'params.m.helperText',
        },
        nbits: {
          label: 'nbits',
          key: 'nbits',
          type: 'number',
          min: 1,
          max: 16,
          defaultValue: '8',
          description: 'params.nbits.description',
          helperText: 'params.nbits.helperText',
        },
        cache_dataset_on_device: {
          label: 'cache_dataset_on_device',
          key: 'cache_dataset_on_device',
          type: 'bool',
          defaultValue: 'false',
          description: 'params.cache_dataset_on_device.description',
          helperText: 'params.cache_dataset_on_device.helperText',
        },
      },
    },
  },
  [DataTypeEnum.BinaryVector]: {
    [INDEX_TYPES_ENUM.BIN_IVF_FLAT]: {
      required: ['nlist'],
      optional: [],
      params: {
        nlist: {
          label: 'nlist',
          key: 'nlist',
          type: 'number',
          required: true,
          min: 1,
          max: 65536,
          description: 'params.nlist.description',
          helperText: 'params.nlist.helperText',
        },
      },
    },
  },
};
